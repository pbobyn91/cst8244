#include <stdlib.h>
#include <stdio.h>
#include <sys/iofunc.h>
#include <sys/dispatch.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <errno.h>

#define MY_PULSE_CODE   _PULSE_CODE_MINAVAIL

typedef union {
	struct _pulse   pulse;
	char msg[255];
} my_message_t;

int main(void) {

	name_attach_t *attach;
	FILE *fp;
	char status[10];
	my_message_t msg;
	int rcvid;

	if ((attach = name_attach(NULL, "mydevice", 0)) == NULL){
		printf("Could not connect to 'mydevice'\n");
		exit(EXIT_FAILURE);
	}

	if ((fp = fopen("/dev/local/mydevice", "r")) == NULL){
		printf("Error opening file\n");
		exit (EXIT_FAILURE);
	}

	fscanf(fp, "%s %s", status, msg.msg);

	fclose(fp);
	if (strcmp(status, "status") == 0){
		printf("Status: %s\n", msg.msg);
		if (strcmp(msg.msg, "closed") == 0){
			name_detach(attach, 0);
			exit (EXIT_SUCCESS);
		}
	}

	while (1){
		rcvid = MsgReceivePulse(attach->chid, &msg.msg, sizeof(msg.msg), NULL);

		if (rcvid == MY_PULSE_CODE){
			printf("Small Integer: %d\n", msg.pulse.value.sival_int);

			if ((fp = fopen("/dev/local/mydevice", "r")) == NULL){
				printf("Error opening file\n");
				exit (EXIT_FAILURE);
			}

			fscanf(fp, "%s %s", status, msg.msg);

			fclose(fp);
			if (strcmp(status, "status") == 0){
				printf("Status: %s\n", msg.msg);
				if (strcmp(msg.msg, "closed") == 0){
					name_detach(attach, 0);
					exit (EXIT_SUCCESS);
				}
			}

		} else {
			printf("Error Receiving the Pulse\n");
			exit(EXIT_FAILURE);
		}
	}
	fclose(fp);
	name_detach(attach, 0);
	exit(EXIT_SUCCESS);
}
