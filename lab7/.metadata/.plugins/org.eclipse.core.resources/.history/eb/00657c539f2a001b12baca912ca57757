#include <stdlib.h>
#include <stdio.h>
#include <sys/iofunc.h>
#include <sys/dispatch.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <errno.h>

#define MY_PULSE_CODE   _PULSE_CODE_MINAVAIL

typedef union {
	struct _pulse   pulse;
	char msg[255];
} my_message_t;

int main(void) {

	name_attach_t *attach;
	FILE *fp;
	char status[10];
	my_message_t msg;
	int rcvid;

	if ((attach = name_attach(NULL, "mydevice", 0)) == NULL){
		printf("Could not connect to 'mydevice'\n");
		exit(EXIT_FAILURE);
	}

	if ((fp = fopen("/dev/local/mydevice", "r")) == NULL){
		printf("Error opening file\n");
		exit (EXIT_FAILURE);
	}

	fscanf(fp, "%s %s", status, msg.msg);

	if (strcmp(status, "status") == 0){
		printf("Status: %s\n", msg.msg);
		fclose(fp);
	}
	if (strcmp(msg.msg, "closed") == 0){
		name_detach(attach, 0);
		fclose(fp);
		exit (EXIT_SUCCESS);
	}

	while (1){
		if ((rcvid = MsgReceivePulse(attach->chid, &msg, sizeof(msg), NULL)) == -1){
			printf("Error receiving pulse\n");
			exit(EXIT_FAILURE);
		}
		if ((fp = fopen("/dev/local/mydevice", "r")) == NULL){
			printf("Error opening file\n");
			exit (EXIT_FAILURE);
		}

		fscanf(fp, "%s %s", status, msg.msg);

		if (strcmp(status, "status") == 0){
			printf("Status: %s\n", msg.msg);
			fclose(fp)l
		}
		if (strcmp(msg.msg, "closed") == 0){
			name_detach(attach, 0);
			fclose(fp);
			exit (EXIT_SUCCESS);
		}
	}

	name_detach(attach, 0);
	exit(EXIT_SUCCESS);

	/*
	 * Upon startup, myController is to read the status of the device:
	 * 		call fopen() to open the device: /dev/local/mydevice
	 * 		scan the status and value from the file
	 * 		if the status is “status” then printf %s, value
	 * 		then if the value is “closed”
	 * 			then name_detach and exit with SUCCESS
	 * 		close the device by its fd
	 * while True:
	 * 		call MsgReceivePulse(attach->chid, &msg, sizeof(msg), NULL)
	 * 		if received a pulse message (i.e. rcvid == 0)
	 * 		then if received MY_PULSE_CODE
	 * 			then print the small integer from the pulse: printf("Small Integer: %d\n", msg.pulse.value.sival_int);
	 * 			call fopen() to open the device: /dev/local/mydevice
	 * 			scan the status and value from the file
	 * 			if the status is “status”
	 * 			then print Status: %s, value
	 * 			if value is “closed”
	 * 			then name_detach() and exit with SUCCESS
	 * 			close the fd
	 * 		else //rcvid != 0
	 * 			display appropriate error message and exit with FAILURE
	 */
}
